/// Mixin to manage responsive breakpoints
/// @group 200 - lib
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
/// @link https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/// Remove the unit of a length
/// @group 200 - lib
/// @param {Number} $number - Number to remove unit from
/// @return {Number} Unitless number
/// @link https://css-tricks.com/snippets/sass/strip-unit-function/
/// @example
///   $length: 42px;
///   $value: strip-unit($length);
///   // -> 42
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}
